makeVector <- function(x = numeric()) {
    m <- NULL
    set <- function(y) {
       x <<- y
       m <<- NULL
    }
    get <- function() x
    setmean <- function(mean) m <<- mean
    getmean <- function() m
    list(set = set, get = get,
         setmean = setmean,
         getmean = getmean)
 }
 
 cachemean <- function(x, ...) {
    m <- x$getmean()
    if(!is.null(m)) {
       message("getting cached data")
       return(m)
    }
    data <- x$get()
    m <- mean(data, ...)
    x$setmean(m)
    m
 }
 
 make_vector <- function(x=numeric()) { 
    m = NULL
    set <- function(y){
       x <<- y
       v <<- NULL
    }  #create a new vector and then assign a value
       # then create a mean and return function 
 get <- function() x
 setmean <- function(mean) m <<- mean   # m is assigened to mean
 getmean <- function() m
 list(set = set, 
      setmean = setmean,
      getmean = getmean)
 }
 cache_mean <- function(x,...) {
    m <-x$getmean()
    if(!is.null(m)){
       message("getting cached data")
       return(m)
    }
    data <- x$get()
    m <- mean (data,...)
    x$setmean(m)
    m
 }
 make_cache_matrix <- function(x=matrix())
 {
    j <- NULL
    set <- function(y) { 
       x <<- y
       j <<- NULL
    }
    get <- function() x setinverse <- function(inverse) j <<-inverse
    getinverse <- function()j
    list(set = set, get = get,
         setinverse =setinverse,
         getinverse = getinverse)
 }
 
 cachesolve <- function(x, ...) {
    j <-x$getinverse()
    if(!is.null(j)){
       message("getting cached data")
       return(j)
    } 
    mat <-x$get()
    j <- slove(mat,...)
    x$setinverse(j)
    j
 }
